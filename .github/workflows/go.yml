name: Go with Docker Compose

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.23"

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Build Go application
        run: |
          go mod tidy
          go build -o app .

      - name: Build Docker image
        run: |
          docker build -t my-go-app .

      - name: Push Docker image to Docker Hub
        if: github.event_name == 'push'
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker tag my-go-app "${{ secrets.DOCKER_USERNAME }}/my-go-app:latest"
          docker push "${{ secrets.DOCKER_USERNAME }}/my-go-app:latest"

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets.VPS_IP }}" >> ~/.ssh/known_hosts

      - name: Copy docker-compose.yml to VPS
        run: |
          scp -i ~/.ssh/id_rsa docker-compose.yml "${{ secrets.VPS_USER }}@${{ secrets.VPS_IP }}:/home/${{ secrets.VPS_USER }}/my-go-app/"

      - name: Deploy to VPS using SSH with Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.VPS_USER }}@${{ secrets.VPS_IP }} << 'EOF'
            set -e
            
            # Navigate to deployment directory
            cd /home/${{ secrets.VPS_USER }}/my-go-app
            
            # Debug: Check if docker-compose.yml exists
            ls -lah
            if [ ! -f "docker-compose.yml" ]; then
              echo "Error: docker-compose.yml not found!"
              exit 1
            fi
            
            # Update system
            sudo apt-get update
            
            # Install Docker and Docker Compose if not installed
            if ! command -v docker &> /dev/null; then
              curl -fsSL https://get.docker.com | sh
              sudo usermod -aG docker $USER
            fi
            if ! command -v docker-compose &> /dev/null; then
              sudo apt-get install -y docker-compose
            fi

            docker login --username "${{ secrets.DOCKER_USERNAME }}" --password "${{ secrets.DOCKER_PASSWORD }}"
            
            # Pull latest Docker image
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-go-app:latest
            
            # Stop and remove old containers
            docker-compose down
            
            # Remove old images
            docker system prune -f
            
            # Start new deployment
            docker-compose up -d --remove-orphans
          EOF
